# -*- mode: ruby -*-
# vi: set ft=ruby :

#####################################################################
# FALSE BASE STATION - Vagrant Configuration
#
# VM for false/rogue cellular network base station
# Components: srsRAN 4G/5G (rogue) + LibreSDR B220 mini
# NO CORE NETWORK
#
# Network: 192.168.56.11
# SDR Device: LibreSDR B220 #2 (USB passthrough required)
#
# ‚ö†Ô∏è  WARNING: For RESEARCH and EDUCATIONAL use ONLY
# ‚ö†Ô∏è  Unauthorized operation is ILLEGAL
#####################################################################

Vagrant.configure("2") do |config|
  # Base box - Ubuntu 22.04 LTS (Jammy Jellyfish)
  config.vm.box = "ubuntu/jammy64"
  config.vm.hostname = "false-bs"

  # Network configuration - BRIDGED MODE
  # VM will get IP from your host network's DHCP server
  # Accessible from any device on your local network
  config.vm.network "public_network", bridge: "enp4s0"

  # VM resources
  config.vm.provider "virtualbox" do |vb|
    vb.name = "false-base-station"
    vb.memory = "2048"
    vb.cpus = 2
    
    # Enable USB controller
    vb.customize ["modifyvm", :id, "--usb", "on"]
    # Enable USB 3.0 controller (xHCI) for better SDR performance
    vb.customize ["modifyvm", :id, "--usbxhci", "on"]
    
    # USB passthrough for LibreSDR B220 #3 - ROGUE/FALSE BASE STATION
    # ‚ö†Ô∏è  IMPORTANT: Each VM needs its own physical SDR device
    # Multiple VMs cannot share the same USB SDR device

    # AUTOMATIC USB FILTER DISABLED to prevent conflicts between VMs
    # Manual USB assignment required via VirtualBox GUI

    puts "=" * 60
    puts "‚ö†Ô∏è  FALSE BASE STATION - ROGUE SDR CONFIGURATION"
    puts "=" * 60
    puts "‚ö†Ô∏è  WARNING: RESEARCH AND EDUCATIONAL USE ONLY"
    puts "   Unauthorized operation is ILLEGAL"
    puts ""
    puts "REQUIRED: Connect SDR Device #3 to this VM"
    puts ""
    puts "üìã Device Requirements:"
    puts "  ‚Ä¢ Hardware: USRP B210 or LibreSDR B220 (DIFFERENT from SDR #1 & #2)"
    puts "  ‚Ä¢ VendorID: 0x2500, ProductID: 0x0020"
    puts "  ‚Ä¢ Serial: [Your SDR #3 serial number - different from SDR #1 & #2]"
    puts ""
    puts "üìã Manual USB Assignment Steps:"
    puts "  1. Start legitimate VM first (with SDR #1)"
    puts "  2. Start legitimate2 VM (with SDR #2)"
    puts "  3. Start this VM: vagrant up false"
    puts "  4. Connect SDR #3 to different host USB port"
    puts "  5. In VirtualBox GUI: VM Menu ‚Üí Devices ‚Üí USB"
    puts "  6. Select: 'Ettus Research LLC USRP B210' (SDR #3)"
    puts "  7. Verify: vagrant ssh false ‚Üí uhd_find_devices"
    puts ""
    puts "‚ö†Ô∏è  CONFLICT PREVENTION:"
    puts "  ‚Ä¢ SDR #1 is for legitimate (primary) VM only"
    puts "  ‚Ä¢ SDR #2 is for legitimate2 (secondary) VM only"
    puts "  ‚Ä¢ SDR #3 is for false (rogue) VM only"
    puts "  ‚Ä¢ Never connect the same SDR to multiple running VMs"
    puts ""
    puts "üîÑ ATTACK SEQUENCE:"
    puts "  ‚Ä¢ Start legitimate VMs first with SDR #1 & #2"
    puts "  ‚Ä¢ Let UE connect to legitimate network"
    puts "  ‚Ä¢ Then start false VM with SDR #3 to demonstrate attacks"
    puts "=" * 60
  end

  # Shared folders
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
  config.vm.synced_folder "../shared", "/vagrant/shared", create: true
  config.vm.synced_folder "./configs", "/vagrant/configs", create: true
  config.vm.synced_folder "./scripts", "/vagrant/scripts", create: true
  config.vm.synced_folder "./install", "/vagrant/install", create: true

  # Provisioning
  config.vm.provision "shell", path: "provision.sh", run: "always"

  # Post-provisioning message
  config.vm.post_up_message = <<-MSG
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë                                                            ‚ïë
    ‚ïë         ‚ö†Ô∏è  FALSE BASE STATION VM Ready ‚ö†Ô∏è                  ‚ïë
    ‚ïë         RESEARCH AND EDUCATIONAL USE ONLY                  ‚ïë
    ‚ïë                                                            ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

    Access the VM:
      vagrant ssh

    Network Configuration:
      Mode: BRIDGED - VM gets IP from your network DHCP
      Find VM IP: vagrant ssh && ip addr show | grep "inet "

    ‚ö†Ô∏è  IMPORTANT OPERATIONAL SEQUENCE:
      1. Start LEGITIMATE BS VM first
      2. Wait for UE to connect to legitimate BS
      3. Then start THIS false BS to demonstrate handover

    Configure Attack:
      sudo attack_config.sh list           # List attack profiles
      sudo attack_config.sh set PROFILE    # Set attack mode

    Start False BS:
      sudo start_false_bs.sh                     # With 15s delay
      sudo start_false_bs.sh -d 20              # With 20s delay
      sudo start_false_bs.sh --no-delay         # Immediate start
      sudo start_false_bs.sh -a downgrade       # Specific attack

    Signal Management:
      sudo signal_manager.sh preset-handover    # Setup for handover
      sudo signal_manager.sh ramp-up-false      # Gradual increase
      sudo adjust_signal.sh demo                # Interactive mode

    Available Attack Profiles:
      ‚Ä¢ imsi_catcher  - Capture subscriber identities
      ‚Ä¢ downgrade     - Force weak encryption
      ‚Ä¢ mitm          - Man-in-the-middle attack
      ‚Ä¢ dos           - Denial of service

    ‚ö†Ô∏è  LEGAL WARNING:
    Operating a false base station without authorization is
    ILLEGAL and may result in criminal prosecution, fines,
    and imprisonment. Use only in isolated, controlled
    research environments with proper authorization.

    Check SDR Device:
      uhd_find_devices                    # Verify SDR #2 detected
  MSG
end

